name: Continuous Integration Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clone Run Clang Format
        uses: actions/checkout@v4
        with:
          repository: 'Sarcasm/run-clang-format'
          path: 'run-clang-format'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format build-essential

      - name: Run Clang Format
        run: |
          sed -i '/InsertNewlineAtEOF: true/d' .clang-format
          ./run-clang-format/run-clang-format.py -r src include test

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential
          sudo apt install software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt update
          sudo apt-get install -y python3.10-dev
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install -y gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100 --slave /usr/bin/g++ g++ /usr/bin/g++-13
          gcc --version

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build build --parallel

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure --verbose --output-junit test-results.xml

      - name: Publish test results
        uses: dorny/test-reporter@v2.1.1
        if: always()
        with:
          name: Catch2 Tests
          path: build/test-results.xml
          reporter: java-junit
          fail-on-error: true